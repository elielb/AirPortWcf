//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI.ServiceHostWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceHostWCF.IDALService", CallbackContract=typeof(UI.ServiceHostWCF.IDALServiceCallback))]
    public interface IDALService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDALService/GetListPlanes", ReplyAction="http://tempuri.org/IDALService/GetListPlanesResponse")]
        void GetListPlanes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDALService/GetListPlanes", ReplyAction="http://tempuri.org/IDALService/GetListPlanesResponse")]
        System.Threading.Tasks.Task GetListPlanesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDALServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDALService/GetPlane", ReplyAction="http://tempuri.org/IDALService/GetPlaneResponse")]
        void GetPlane(ContractsServer.Models.StationModel[] ArrStationModel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDALServiceChannel : UI.ServiceHostWCF.IDALService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DALServiceClient : System.ServiceModel.DuplexClientBase<UI.ServiceHostWCF.IDALService>, UI.ServiceHostWCF.IDALService {
        
        public DALServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DALServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DALServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DALServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DALServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetListPlanes() {
            base.Channel.GetListPlanes();
        }
        
        public System.Threading.Tasks.Task GetListPlanesAsync() {
            return base.Channel.GetListPlanesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceHostWCF.IWaitingListService", CallbackContract=typeof(UI.ServiceHostWCF.IWaitingListServiceCallback))]
    public interface IWaitingListService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaitingListService/GetWatingList", ReplyAction="http://tempuri.org/IWaitingListService/GetWatingListResponse")]
        void GetWatingList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaitingListService/GetWatingList", ReplyAction="http://tempuri.org/IWaitingListService/GetWatingListResponse")]
        System.Threading.Tasks.Task GetWatingListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWaitingListServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaitingListService/GetWatingListCallBack", ReplyAction="http://tempuri.org/IWaitingListService/GetWatingListCallBackResponse")]
        void GetWatingListCallBack(ContractsServer.Models.Plane[] listPlanes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWaitingListServiceChannel : UI.ServiceHostWCF.IWaitingListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WaitingListServiceClient : System.ServiceModel.DuplexClientBase<UI.ServiceHostWCF.IWaitingListService>, UI.ServiceHostWCF.IWaitingListService {
        
        public WaitingListServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WaitingListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WaitingListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WaitingListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WaitingListServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetWatingList() {
            base.Channel.GetWatingList();
        }
        
        public System.Threading.Tasks.Task GetWatingListAsync() {
            return base.Channel.GetWatingListAsync();
        }
    }
}
